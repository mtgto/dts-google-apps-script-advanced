)]}'
{"1":{"1":"Area120tables_v1alpha1","2":[{"1":"Tables","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Collection.TablesCollection","3":1},{"1":"Workspaces","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Collection.WorkspacesCollection","3":1}],"3":[{"1":"newBatchCreateRowsRequest","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.BatchCreateRowsRequest","6":"Create a new instance of BatchCreateRowsRequest"},{"1":"newBatchDeleteRowsRequest","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.BatchDeleteRowsRequest","6":"Create a new instance of BatchDeleteRowsRequest"},{"1":"newBatchUpdateRowsRequest","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.BatchUpdateRowsRequest","6":"Create a new instance of BatchUpdateRowsRequest"},{"1":"newCreateRowRequest","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.CreateRowRequest","6":"Create a new instance of CreateRowRequest"},{"1":"newRow","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row","6":"Create a new instance of Row"},{"1":"newUpdateRowRequest","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.UpdateRowRequest","6":"Create a new instance of UpdateRowRequest"}]},"2":[{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Collection.Tables.RowsCollection","3":[{"1":"batchCreate","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.BatchCreateRowsResponse","3":[{"1":"resource","2":"Area120tables.V1alpha1.Schema.BatchCreateRowsRequest"},{"1":"parent","2":"String","3":"Required. The parent table where the rows will be created. Format: tables/{table}"}],"6":"Creates multiple rows."},{"1":"batchDelete","2":"Area120tables.V1alpha1.Schema.Empty","3":[{"1":"resource","2":"Area120tables.V1alpha1.Schema.BatchDeleteRowsRequest"},{"1":"parent","2":"String","3":"Required. The parent table shared by all rows being deleted. Format: tables/{table}"}],"6":"Deletes multiple rows."},{"1":"batchUpdate","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.BatchUpdateRowsResponse","3":[{"1":"resource","2":"Area120tables.V1alpha1.Schema.BatchUpdateRowsRequest"},{"1":"parent","2":"String","3":"Required. The parent table shared by all rows being updated. Format: tables/{table}"}],"6":"Updates multiple rows."},{"1":"create","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row","3":[{"1":"resource","2":"Area120tables.V1alpha1.Schema.Row"},{"1":"parent","2":"String","3":"Required. The parent table where this row will be created. Format: tables/{table}"}],"6":"Creates a row."},{"1":"create","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row","3":[{"1":"resource","2":"Area120tables.V1alpha1.Schema.Row"},{"1":"parent","2":"String","3":"Required. The parent table where this row will be created. Format: tables/{table}"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Creates a row."},{"1":"get","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row","3":[{"1":"name","2":"String","3":"Required. The name of the row to retrieve. Format: tables/{table}/rows/{row}"}],"6":"Gets a row. Returns NOT_FOUND if the row does not exist in the table."},{"1":"get","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row","3":[{"1":"name","2":"String","3":"Required. The name of the row to retrieve. Format: tables/{table}/rows/{row}"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Gets a row. Returns NOT_FOUND if the row does not exist in the table."},{"1":"list","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.ListRowsResponse","3":[{"1":"parent","2":"String","3":"Required. The parent table. Format: tables/{table}"}],"6":"Lists rows in a table. Returns NOT_FOUND if the table does not exist."},{"1":"list","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.ListRowsResponse","3":[{"1":"parent","2":"String","3":"Required. The parent table. Format: tables/{table}"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Lists rows in a table. Returns NOT_FOUND if the table does not exist."},{"1":"patch","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row","3":[{"1":"resource","2":"Area120tables.V1alpha1.Schema.Row"},{"1":"name","2":"String","3":"The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row."}],"6":"Updates a row."},{"1":"patch","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row","3":[{"1":"resource","2":"Area120tables.V1alpha1.Schema.Row"},{"1":"name","2":"String","3":"The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Updates a row."},{"1":"remove","2":"Area120tables.V1alpha1.Schema.Empty","3":[{"1":"name","2":"String","3":"Required. The name of the row to delete. Format: tables/{table}/rows/{row}"}],"6":"Deletes a row."}]},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Collection.TablesCollection","2":[{"1":"Rows","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Collection.Tables.RowsCollection","3":1}],"3":[{"1":"get","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Table","3":[{"1":"name","2":"String","3":"Required. The name of the table to retrieve. Format: tables/{table}"}],"6":"Gets a table. Returns NOT_FOUND if the table does not exist."},{"1":"list","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.ListTablesResponse","6":"Lists tables for the user."},{"1":"list","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.ListTablesResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Lists tables for the user."}]},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Collection.WorkspacesCollection","3":[{"1":"get","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Workspace","3":[{"1":"name","2":"String","3":"Required. The name of the workspace to retrieve. Format: workspaces/{workspace}"}],"6":"Gets a workspace. Returns NOT_FOUND if the workspace does not exist."},{"1":"list","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.ListWorkspacesResponse","6":"Lists workspaces for the user."},{"1":"list","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.ListWorkspacesResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Lists workspaces for the user."}]},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.BatchCreateRowsRequest","2":[{"1":"requests","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.CreateRowRequest[]","3":1,"6":"Required. The request message specifying the rows to create. A maximum of 500 rows can be created in a single batch."}],"6":"Request message for TablesService.BatchCreateRows."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.BatchCreateRowsResponse","2":[{"1":"rows","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row[]","3":1,"6":"The created rows."}],"6":"Response message for TablesService.BatchCreateRows."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.BatchDeleteRowsRequest","2":[{"1":"names","2":"String[]","3":1,"6":"Required. The names of the rows to delete. All rows must belong to the parent table or else the entire batch will fail. A maximum of 500 rows can be deleted in a batch. Format: tables/{table}/rows/{row}"}],"6":"Request message for TablesService.BatchDeleteRows"},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.BatchUpdateRowsRequest","2":[{"1":"requests","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.UpdateRowRequest[]","3":1,"6":"Required. The request messages specifying the rows to update. A maximum of 500 rows can be modified in a single batch."}],"6":"Request message for TablesService.BatchUpdateRows."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.BatchUpdateRowsResponse","2":[{"1":"rows","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row[]","3":1,"6":"The updated rows."}],"6":"Response message for TablesService.BatchUpdateRows."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.ColumnDescription","2":[{"1":"dataType","2":"String","3":1,"6":"Data type of the column Supported types are auto_id, boolean, boolean_list, creator, create_timestamp, date, dropdown, location, integer, integer_list, number, number_list, person, person_list, tags, check_list, text, text_list, update_timestamp, updater, relationship, file_attachment_list. These types directly map to the column types supported on Tables website."},{"1":"id","2":"String","3":1,"6":"Internal id for a column."},{"1":"labels","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.LabeledItem[]","3":1,"6":"Optional. Range of labeled values for the column. Some columns like tags and drop-downs limit the values to a set of possible values. We return the range of values in such cases to help clients implement better user data validation."},{"1":"lookupDetails","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.LookupDetails","3":1,"6":"Optional. Indicates that this is a lookup column whose value is derived from the relationship column specified in the details. Lookup columns can not be updated directly. To change the value you must update the associated relationship column."},{"1":"name","2":"String","3":1,"6":"column name"},{"1":"relationshipDetails","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.RelationshipDetails","3":1,"6":"Optional. Additional details about a relationship column. Specified when data_type is relationship."}],"6":"Details on a column in the table."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.CreateRowRequest","2":[{"1":"parent","2":"String","3":1,"6":"Required. The parent table where this row will be created. Format: tables/{table}"},{"1":"row","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row","3":1,"6":"Required. The row to create."},{"1":"view","2":"String","3":1,"6":"Optional. Column key to use for values in the row. Defaults to user entered name."}],"6":"Request message for TablesService.CreateRow."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.LabeledItem","2":[{"1":"id","2":"String","3":1,"6":"Internal id associated with the item."},{"1":"name","2":"String","3":1,"6":"Display string as entered by user."}],"6":"A single item in a labeled column."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.ListRowsResponse","2":[{"1":"nextPageToken","2":"String","3":1,"6":"A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages."},{"1":"rows","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row[]","3":1,"6":"The rows from the specified table."}],"6":"Response message for TablesService.ListRows."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.ListTablesResponse","2":[{"1":"nextPageToken","2":"String","3":1,"6":"A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages."},{"1":"tables","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Table[]","3":1,"6":"The list of tables."}],"6":"Response message for TablesService.ListTables."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.ListWorkspacesResponse","2":[{"1":"nextPageToken","2":"String","3":1,"6":"A token, which can be sent as `page_token` to retrieve the next page. If this field is empty, there are no subsequent pages."},{"1":"workspaces","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Workspace[]","3":1,"6":"The list of workspaces."}],"6":"Response message for TablesService.ListWorkspaces."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.LookupDetails","2":[{"1":"relationshipColumn","2":"String","3":1,"6":"The name of the relationship column associated with the lookup."},{"1":"relationshipColumnId","2":"String","3":1,"6":"The id of the relationship column."}],"6":"Details about a lookup column whose value comes from the associated relationship."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.RelationshipDetails","2":[{"1":"linkedTable","2":"String","3":1,"6":"The name of the table this relationship is linked to."}],"6":"Details about a relationship column."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row","2":[{"1":"name","2":"String","3":1,"6":"The resource name of the row. Row names have the form `tables/{table}/rows/{row}`. The name is ignored when creating a row."},{"1":"values","2":"Object","3":1,"6":"The values of the row. This is a map of column key to value. Key is user entered name(default) or the internal column id based on the view in the request."}],"6":"A single row in a table."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Table","2":[{"1":"columns","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.ColumnDescription[]","3":1,"6":"List of columns in this table. Order of columns matches the display order."},{"1":"displayName","2":"String","3":1,"6":"The human readable title of the table."},{"1":"name","2":"String","3":1,"6":"The resource name of the table. Table names have the form `tables/{table}`."}],"6":"A single table."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.UpdateRowRequest","2":[{"1":"row","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Row","3":1,"6":"Required. The row to update."},{"1":"updateMask","2":"String","3":1,"6":"The list of fields to update."},{"1":"view","2":"String","3":1,"6":"Optional. Column key to use for values in the row. Defaults to user entered name."}],"6":"Request message for TablesService.UpdateRow."},{"1":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Workspace","2":[{"1":"displayName","2":"String","3":1,"6":"The human readable title of the workspace."},{"1":"name","2":"String","3":1,"6":"The resource name of the workspace. Workspace names have the form `workspaces/{workspace}`."},{"1":"tables","2":"Area120tables_v1alpha1.Area120tables.V1alpha1.Schema.Table[]","3":1,"6":"The list of tables in the workspace."}],"6":"A single workspace."}],"3":0,"4":0,"5":0}