{"1":{"1":"Peopleapi_v1","2":[{"1":"ContactGroups","2":"Peopleapi_v1.Peopleapi.V1.Collection.ContactGroupsCollection","3":1},{"1":"OtherContacts","2":"Peopleapi_v1.Peopleapi.V1.Collection.OtherContactsCollection","3":1},{"1":"People","2":"Peopleapi_v1.Peopleapi.V1.Collection.PeopleCollection","3":1}],"3":[{"1":"newAddress","2":"Peopleapi_v1.Peopleapi.V1.Schema.Address","6":"Create a new instance of Address"},{"1":"newAgeRangeType","2":"Peopleapi_v1.Peopleapi.V1.Schema.AgeRangeType","6":"Create a new instance of AgeRangeType"},{"1":"newBiography","2":"Peopleapi_v1.Peopleapi.V1.Schema.Biography","6":"Create a new instance of Biography"},{"1":"newBirthday","2":"Peopleapi_v1.Peopleapi.V1.Schema.Birthday","6":"Create a new instance of Birthday"},{"1":"newBraggingRights","2":"Peopleapi_v1.Peopleapi.V1.Schema.BraggingRights","6":"Create a new instance of BraggingRights"},{"1":"newCalendarUrl","2":"Peopleapi_v1.Peopleapi.V1.Schema.CalendarUrl","6":"Create a new instance of CalendarUrl"},{"1":"newClientData","2":"Peopleapi_v1.Peopleapi.V1.Schema.ClientData","6":"Create a new instance of ClientData"},{"1":"newContactGroup","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","6":"Create a new instance of ContactGroup"},{"1":"newContactGroupMembership","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupMembership","6":"Create a new instance of ContactGroupMembership"},{"1":"newContactGroupMetadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupMetadata","6":"Create a new instance of ContactGroupMetadata"},{"1":"newCopyOtherContactToMyContactsGroupRequest","2":"Peopleapi_v1.Peopleapi.V1.Schema.CopyOtherContactToMyContactsGroupRequest","6":"Create a new instance of CopyOtherContactToMyContactsGroupRequest"},{"1":"newCoverPhoto","2":"Peopleapi_v1.Peopleapi.V1.Schema.CoverPhoto","6":"Create a new instance of CoverPhoto"},{"1":"newCreateContactGroupRequest","2":"Peopleapi_v1.Peopleapi.V1.Schema.CreateContactGroupRequest","6":"Create a new instance of CreateContactGroupRequest"},{"1":"newDate","2":"Peopleapi_v1.Peopleapi.V1.Schema.Date","6":"Create a new instance of Date"},{"1":"newDomainMembership","2":"Peopleapi_v1.Peopleapi.V1.Schema.DomainMembership","6":"Create a new instance of DomainMembership"},{"1":"newEmailAddress","2":"Peopleapi_v1.Peopleapi.V1.Schema.EmailAddress","6":"Create a new instance of EmailAddress"},{"1":"newEvent","2":"Peopleapi_v1.Peopleapi.V1.Schema.Event","6":"Create a new instance of Event"},{"1":"newExternalId","2":"Peopleapi_v1.Peopleapi.V1.Schema.ExternalId","6":"Create a new instance of ExternalId"},{"1":"newFieldMetadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","6":"Create a new instance of FieldMetadata"},{"1":"newFileAs","2":"Peopleapi_v1.Peopleapi.V1.Schema.FileAs","6":"Create a new instance of FileAs"},{"1":"newGender","2":"Peopleapi_v1.Peopleapi.V1.Schema.Gender","6":"Create a new instance of Gender"},{"1":"newGroupClientData","2":"Peopleapi_v1.Peopleapi.V1.Schema.GroupClientData","6":"Create a new instance of GroupClientData"},{"1":"newImClient","2":"Peopleapi_v1.Peopleapi.V1.Schema.ImClient","6":"Create a new instance of ImClient"},{"1":"newInterest","2":"Peopleapi_v1.Peopleapi.V1.Schema.Interest","6":"Create a new instance of Interest"},{"1":"newLocale","2":"Peopleapi_v1.Peopleapi.V1.Schema.Locale","6":"Create a new instance of Locale"},{"1":"newLocation","2":"Peopleapi_v1.Peopleapi.V1.Schema.Location","6":"Create a new instance of Location"},{"1":"newMembership","2":"Peopleapi_v1.Peopleapi.V1.Schema.Membership","6":"Create a new instance of Membership"},{"1":"newMiscKeyword","2":"Peopleapi_v1.Peopleapi.V1.Schema.MiscKeyword","6":"Create a new instance of MiscKeyword"},{"1":"newModifyContactGroupMembersRequest","2":"Peopleapi_v1.Peopleapi.V1.Schema.ModifyContactGroupMembersRequest","6":"Create a new instance of ModifyContactGroupMembersRequest"},{"1":"newName","2":"Peopleapi_v1.Peopleapi.V1.Schema.Name","6":"Create a new instance of Name"},{"1":"newNickname","2":"Peopleapi_v1.Peopleapi.V1.Schema.Nickname","6":"Create a new instance of Nickname"},{"1":"newOccupation","2":"Peopleapi_v1.Peopleapi.V1.Schema.Occupation","6":"Create a new instance of Occupation"},{"1":"newOrganization","2":"Peopleapi_v1.Peopleapi.V1.Schema.Organization","6":"Create a new instance of Organization"},{"1":"newPerson","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","6":"Create a new instance of Person"},{"1":"newPersonMetadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.PersonMetadata","6":"Create a new instance of PersonMetadata"},{"1":"newPhoneNumber","2":"Peopleapi_v1.Peopleapi.V1.Schema.PhoneNumber","6":"Create a new instance of PhoneNumber"},{"1":"newPhoto","2":"Peopleapi_v1.Peopleapi.V1.Schema.Photo","6":"Create a new instance of Photo"},{"1":"newProfileMetadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.ProfileMetadata","6":"Create a new instance of ProfileMetadata"},{"1":"newRelation","2":"Peopleapi_v1.Peopleapi.V1.Schema.Relation","6":"Create a new instance of Relation"},{"1":"newRelationshipInterest","2":"Peopleapi_v1.Peopleapi.V1.Schema.RelationshipInterest","6":"Create a new instance of RelationshipInterest"},{"1":"newRelationshipStatus","2":"Peopleapi_v1.Peopleapi.V1.Schema.RelationshipStatus","6":"Create a new instance of RelationshipStatus"},{"1":"newResidence","2":"Peopleapi_v1.Peopleapi.V1.Schema.Residence","6":"Create a new instance of Residence"},{"1":"newSipAddress","2":"Peopleapi_v1.Peopleapi.V1.Schema.SipAddress","6":"Create a new instance of SipAddress"},{"1":"newSkill","2":"Peopleapi_v1.Peopleapi.V1.Schema.Skill","6":"Create a new instance of Skill"},{"1":"newSource","2":"Peopleapi_v1.Peopleapi.V1.Schema.Source","6":"Create a new instance of Source"},{"1":"newTagline","2":"Peopleapi_v1.Peopleapi.V1.Schema.Tagline","6":"Create a new instance of Tagline"},{"1":"newUpdateContactGroupRequest","2":"Peopleapi_v1.Peopleapi.V1.Schema.UpdateContactGroupRequest","6":"Create a new instance of UpdateContactGroupRequest"},{"1":"newUpdateContactPhotoRequest","2":"Peopleapi_v1.Peopleapi.V1.Schema.UpdateContactPhotoRequest","6":"Create a new instance of UpdateContactPhotoRequest"},{"1":"newUrl","2":"Peopleapi_v1.Peopleapi.V1.Schema.Url","6":"Create a new instance of Url"},{"1":"newUserDefined","2":"Peopleapi_v1.Peopleapi.V1.Schema.UserDefined","6":"Create a new instance of UserDefined"}],"6":"Provides access to information about profiles and contacts."},"2":[{"1":"Peopleapi_v1.Peopleapi.V1.Collection.ContactGroups.MembersCollection","3":[{"1":"modify","2":"Peopleapi_v1.Peopleapi.V1.Schema.ModifyContactGroupMembersResponse","3":[{"1":"resource","2":"Peopleapi.V1.Schema.ModifyContactGroupMembersRequest"},{"1":"resourceName","2":"String","3":"Required. The resource name of the contact group to modify."}],"6":"Modify the members of a contact group owned by the authenticated user. The only system contact groups that can have members added are `contactGroups/myContacts` and `contactGroups/starred`. Other system contact groups are deprecated and can only have contacts removed."}]},{"1":"Peopleapi_v1.Peopleapi.V1.Collection.ContactGroupsCollection","2":[{"1":"Members","2":"Peopleapi_v1.Peopleapi.V1.Collection.ContactGroups.MembersCollection","3":1}],"3":[{"1":"batchGet","2":"Peopleapi_v1.Peopleapi.V1.Schema.BatchGetContactGroupsResponse","6":"Get a list of contact groups owned by the authenticated user by specifying a list of contact group resource names."},{"1":"batchGet","2":"Peopleapi_v1.Peopleapi.V1.Schema.BatchGetContactGroupsResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Get a list of contact groups owned by the authenticated user by specifying a list of contact group resource names."},{"1":"create","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":[{"1":"resource","2":"Peopleapi.V1.Schema.CreateContactGroupRequest"}],"6":"Create a new contact group owned by the authenticated user."},{"1":"get","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":[{"1":"resourceName","2":"String","3":"Required. The resource name of the contact group to get."}],"6":"Get a specific contact group owned by the authenticated user by specifying a contact group resource name."},{"1":"get","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":[{"1":"resourceName","2":"String","3":"Required. The resource name of the contact group to get."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Get a specific contact group owned by the authenticated user by specifying a contact group resource name."},{"1":"list","2":"Peopleapi_v1.Peopleapi.V1.Schema.ListContactGroupsResponse","6":"List all contact groups owned by the authenticated user. Members of the contact groups are not populated."},{"1":"list","2":"Peopleapi_v1.Peopleapi.V1.Schema.ListContactGroupsResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"List all contact groups owned by the authenticated user. Members of the contact groups are not populated."},{"1":"remove","2":"Peopleapi.V1.Schema.Empty","3":[{"1":"resourceName","2":"String","3":"Required. The resource name of the contact group to delete."}],"6":"Delete an existing contact group owned by the authenticated user by specifying a contact group resource name."},{"1":"remove","2":"Peopleapi.V1.Schema.Empty","3":[{"1":"resourceName","2":"String","3":"Required. The resource name of the contact group to delete."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Delete an existing contact group owned by the authenticated user by specifying a contact group resource name."},{"1":"update","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":[{"1":"resource","2":"Peopleapi.V1.Schema.UpdateContactGroupRequest"},{"1":"resourceName","2":"String","3":"The resource name for the contact group, assigned by the server. An ASCII string, in the form of `contactGroups/{contact_group_id}`."}],"6":"Update the name of an existing contact group owned by the authenticated user."}]},{"1":"Peopleapi_v1.Peopleapi.V1.Collection.OtherContactsCollection","3":[{"1":"copyOtherContactToMyContactsGroup","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resource","2":"Peopleapi.V1.Schema.CopyOtherContactToMyContactsGroupRequest"},{"1":"resourceName","2":"String","3":"Required. The resource name of the \"Other contact\" to copy."}],"6":"Copies an \"Other contact\" to a new contact in the user's \"myContacts\" group"},{"1":"list","2":"Peopleapi_v1.Peopleapi.V1.Schema.ListOtherContactsResponse","6":"List all \"Other contacts\", that is contacts that are not in a contact group. \"Other contacts\" are typically auto created contacts from interactions."},{"1":"list","2":"Peopleapi_v1.Peopleapi.V1.Schema.ListOtherContactsResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"List all \"Other contacts\", that is contacts that are not in a contact group. \"Other contacts\" are typically auto created contacts from interactions."}]},{"1":"Peopleapi_v1.Peopleapi.V1.Collection.People.ConnectionsCollection","3":[{"1":"list","2":"Peopleapi_v1.Peopleapi.V1.Schema.ListConnectionsResponse","3":[{"1":"resourceName","2":"String","3":"Required. The resource name to return connections for. Only `people/me` is valid."}],"6":"Provides a list of the authenticated user's contacts. The request returns a 400 error if `personFields` is not specified. The request returns a 410 error if `sync_token` is specified and is expired. Sync tokens expire after 7 days to prevent data drift between clients and the server. To handle a sync token expired error, a request should be sent without `sync_token` to get all contacts."},{"1":"list","2":"Peopleapi_v1.Peopleapi.V1.Schema.ListConnectionsResponse","3":[{"1":"resourceName","2":"String","3":"Required. The resource name to return connections for. Only `people/me` is valid."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Provides a list of the authenticated user's contacts. The request returns a 400 error if `personFields` is not specified. The request returns a 410 error if `sync_token` is specified and is expired. Sync tokens expire after 7 days to prevent data drift between clients and the server. To handle a sync token expired error, a request should be sent without `sync_token` to get all contacts."}]},{"1":"Peopleapi_v1.Peopleapi.V1.Collection.PeopleCollection","2":[{"1":"Connections","2":"Peopleapi_v1.Peopleapi.V1.Collection.People.ConnectionsCollection","3":1}],"3":[{"1":"createContact","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resource","2":"Peopleapi.V1.Schema.Person"}],"6":"Create a new contact and return the person resource for that contact. The request returns a 400 error if more than one field is specified on a field that is a singleton for contact sources: * biographies * birthdays * genders * names"},{"1":"createContact","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resource","2":"Peopleapi.V1.Schema.Person"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Create a new contact and return the person resource for that contact. The request returns a 400 error if more than one field is specified on a field that is a singleton for contact sources: * biographies * birthdays * genders * names"},{"1":"deleteContact","2":"Peopleapi.V1.Schema.Empty","3":[{"1":"resourceName","2":"String","3":"Required. The resource name of the contact to delete."}],"6":"Delete a contact person. Any non-contact data will not be deleted."},{"1":"deleteContactPhoto","2":"Peopleapi_v1.Peopleapi.V1.Schema.DeleteContactPhotoResponse","3":[{"1":"resourceName","2":"String","3":"Required. The resource name of the contact whose photo will be deleted."}],"6":"Delete a contact's photo."},{"1":"deleteContactPhoto","2":"Peopleapi_v1.Peopleapi.V1.Schema.DeleteContactPhotoResponse","3":[{"1":"resourceName","2":"String","3":"Required. The resource name of the contact whose photo will be deleted."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Delete a contact's photo."},{"1":"get","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resourceName","2":"String","3":"Required. The resource name of the person to provide information about. - To get information about the authenticated user, specify `people/me`. - To get information about a google account, specify `people/{account_id}`. - To get information about a contact, specify the resource name that identifies the contact as returned by [`people.connections.list`](/people/api/rest/v1/people.connections/list)."}],"6":"Provides information about a person by specifying a resource name. Use `people/me` to indicate the authenticated user. The request returns a 400 error if 'personFields' is not specified."},{"1":"get","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resourceName","2":"String","3":"Required. The resource name of the person to provide information about. - To get information about the authenticated user, specify `people/me`. - To get information about a google account, specify `people/{account_id}`. - To get information about a contact, specify the resource name that identifies the contact as returned by [`people.connections.list`](/people/api/rest/v1/people.connections/list)."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Provides information about a person by specifying a resource name. Use `people/me` to indicate the authenticated user. The request returns a 400 error if 'personFields' is not specified."},{"1":"getBatchGet","2":"Peopleapi_v1.Peopleapi.V1.Schema.GetPeopleResponse","6":"Provides information about a list of specific people by specifying a list of requested resource names. Use `people/me` to indicate the authenticated user. The request returns a 400 error if 'personFields' is not specified."},{"1":"getBatchGet","2":"Peopleapi_v1.Peopleapi.V1.Schema.GetPeopleResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Provides information about a list of specific people by specifying a list of requested resource names. Use `people/me` to indicate the authenticated user. The request returns a 400 error if 'personFields' is not specified."},{"1":"listDirectoryPeople","2":"Peopleapi_v1.Peopleapi.V1.Schema.ListDirectoryPeopleResponse","6":"Provides a list of domain profiles and domain contacts in the authenticated user's domain directory."},{"1":"listDirectoryPeople","2":"Peopleapi_v1.Peopleapi.V1.Schema.ListDirectoryPeopleResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Provides a list of domain profiles and domain contacts in the authenticated user's domain directory."},{"1":"searchDirectoryPeople","2":"Peopleapi_v1.Peopleapi.V1.Schema.SearchDirectoryPeopleResponse","6":"Provides a list of domain profiles and domain contacts in the authenticated user's domain directory that match the search query."},{"1":"searchDirectoryPeople","2":"Peopleapi_v1.Peopleapi.V1.Schema.SearchDirectoryPeopleResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Provides a list of domain profiles and domain contacts in the authenticated user's domain directory that match the search query."},{"1":"updateContact","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resource","2":"Peopleapi.V1.Schema.Person"},{"1":"resourceName","2":"String","3":"The resource name for the person, assigned by the server. An ASCII string with a max length of 27 characters, in the form of `people/{person_id}`."}],"6":"Update contact data for an existing contact person. Any non-contact data will not be modified. Any non-contact data in the person to update will be ignored. All fields specified in the `update_mask` will be replaced. The server returns a 400 error if `person.metadata.sources` is not specified for the contact to be updated or if there is no contact source. The server returns a 400 error with reason `\"failedPrecondition\"` if `person.metadata.sources.etag` is different than the contact's etag, which indicates the contact has changed since its data was read. Clients should get the latest person and merge their updates into the latest person. The server returns a 400 error if `memberships` are being updated and there are no contact group memberships specified on the person. The server returns a 400 error if more than one field is specified on a field that is a singleton for contact sources: * biographies * birthdays * genders * names"},{"1":"updateContact","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":[{"1":"resource","2":"Peopleapi.V1.Schema.Person"},{"1":"resourceName","2":"String","3":"The resource name for the person, assigned by the server. An ASCII string with a max length of 27 characters, in the form of `people/{person_id}`."},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Update contact data for an existing contact person. Any non-contact data will not be modified. Any non-contact data in the person to update will be ignored. All fields specified in the `update_mask` will be replaced. The server returns a 400 error if `person.metadata.sources` is not specified for the contact to be updated or if there is no contact source. The server returns a 400 error with reason `\"failedPrecondition\"` if `person.metadata.sources.etag` is different than the contact's etag, which indicates the contact has changed since its data was read. Clients should get the latest person and merge their updates into the latest person. The server returns a 400 error if `memberships` are being updated and there are no contact group memberships specified on the person. The server returns a 400 error if more than one field is specified on a field that is a singleton for contact sources: * biographies * birthdays * genders * names"},{"1":"updateContactPhoto","2":"Peopleapi_v1.Peopleapi.V1.Schema.UpdateContactPhotoResponse","3":[{"1":"resource","2":"Peopleapi.V1.Schema.UpdateContactPhotoRequest"},{"1":"resourceName","2":"String","3":"Required. Person resource name"}],"6":"Update a contact's photo."}]},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Address","2":[{"1":"city","2":"String","3":1,"6":"The city of the address."},{"1":"country","2":"String","3":1,"6":"The country of the address."},{"1":"countryCode","2":"String","3":1,"6":"The [ISO 3166-1 alpha-2](http://www.iso.org/iso/country_codes.htm) country code of the address."},{"1":"extendedAddress","2":"String","3":1,"6":"The extended address of the address; for example, the apartment number."},{"1":"formattedType","2":"String","3":1,"6":"Output only. The type of the address translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"formattedValue","2":"String","3":1,"6":"The unstructured value of the address. If this is not set by the user it will be automatically constructed from structured values."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the address."},{"1":"poBox","2":"String","3":1,"6":"The P.O. box of the address."},{"1":"postalCode","2":"String","3":1,"6":"The postal code of the address."},{"1":"region","2":"String","3":1,"6":"The region of the address; for example, the state or province."},{"1":"streetAddress","2":"String","3":1,"6":"The street address."},{"1":"type","2":"String","3":1,"6":"The type of the address. The type can be custom or one of these predefined values: * `home` * `work` * `other`"}],"6":"A person's physical address. May be a P.O. box or street address. All fields are optional."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.AgeRangeType","2":[{"1":"ageRange","2":"String","3":1,"6":"The age range."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the age range."}],"6":"A person's age range."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.BatchGetContactGroupsResponse","2":[{"1":"responses","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupResponse[]","3":1,"6":"The list of responses for each requested contact group resource."}],"6":"The response to a batch get contact groups request."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Biography","2":[{"1":"contentType","2":"String","3":1,"6":"The content type of the biography."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the biography."},{"1":"value","2":"String","3":1,"6":"The short biography."}],"6":"A person's short biography."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Birthday","2":[{"1":"date","2":"Peopleapi_v1.Peopleapi.V1.Schema.Date","3":1,"6":"The date of the birthday."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the birthday."},{"1":"text","2":"String","3":1,"6":"A free-form string representing the user's birthday."}],"6":"A person's birthday. At least one of the `date` and `text` fields are specified. The `date` and `text` fields typically represent the same date, but are not guaranteed to."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.BraggingRights","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the bragging rights."},{"1":"value","2":"String","3":1,"6":"The bragging rights; for example, `climbed mount everest`."}],"6":"**DEPRECATED**: No data will be returned A person's bragging rights."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.CalendarUrl","2":[{"1":"formattedType","2":"String","3":1,"6":"Output only. The type of the calendar URL translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the calendar URL."},{"1":"type","2":"String","3":1,"6":"The type of the calendar URL. The type can be custom or one of these predefined values: * `home` * `freeBusy` * `work`"},{"1":"url","2":"String","3":1,"6":"The calendar URL."}],"6":"A person's calendar URL."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ClientData","2":[{"1":"key","2":"String","3":1,"6":"The client specified key of the client data."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the client data."},{"1":"value","2":"String","3":1,"6":"The client specified value of the client data."}],"6":"Arbitrary client data that is populated by clients. Duplicate keys and values are allowed."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","2":[{"1":"clientData","2":"Peopleapi_v1.Peopleapi.V1.Schema.GroupClientData[]","3":1,"6":"The group's client data."},{"1":"etag","2":"String","3":1,"6":"The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the resource. Used for web cache validation."},{"1":"formattedName","2":"String","3":1,"6":"Output only. The name translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale for system groups names. Group names set by the owner are the same as name."},{"1":"groupType","2":"String","3":1,"6":"Output only. The contact group type."},{"1":"memberCount","2":"Integer","3":1,"6":"Output only. The total number of contacts in the group irrespective of max members in specified in the request."},{"1":"memberResourceNames","2":"String[]","3":1,"6":"Output only. The list of contact person resource names that are members of the contact group. The field is only populated for GET requests and will only return as many members as `maxMembers` in the get request."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupMetadata","3":1,"6":"Output only. Metadata about the contact group."},{"1":"name","2":"String","3":1,"6":"The contact group name set by the group owner or a system provided name for system groups."},{"1":"resourceName","2":"String","3":1,"6":"The resource name for the contact group, assigned by the server. An ASCII string, in the form of `contactGroups/{contact_group_id}`."}],"6":"A contact group."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupMembership","2":[{"1":"contactGroupId","2":"String","3":1,"6":"Output only. The contact group ID for the contact group membership."},{"1":"contactGroupResourceName","2":"String","3":1,"6":"The resource name for the contact group, assigned by the server. An ASCII string, in the form of `contactGroups/{contact_group_id}`. Only contact_group_resource_name can be used for modifying memberships. Any contact group membership can be removed, but only user group or \"myContacts\" or \"starred\" system groups memberships can be added. A contact must always have at least one contact group membership."}],"6":"A Google contact group membership."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupMetadata","2":[{"1":"deleted","2":"Boolean","3":1,"6":"Output only. True if the contact group resource has been deleted. Populated only for [`ListContactGroups`](/people/api/rest/v1/contactgroups/list) requests that include a sync token."},{"1":"updateTime","2":"String","3":1,"6":"Output only. The time the group was last updated."}],"6":"The metadata about a contact group."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupResponse","2":[{"1":"contactGroup","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":1,"6":"The contact group."},{"1":"requestedResourceName","2":"String","3":1,"6":"The original requested resource name."},{"1":"status","2":"Peopleapi_v1.Peopleapi.V1.Schema.Status","3":1,"6":"The status of the response."}],"6":"The response for a specific contact group."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.CopyOtherContactToMyContactsGroupRequest","2":[{"1":"copyMask","2":"String","3":1,"6":"Required. A field mask to restrict which fields are copied into the new contact. Valid values are: * emailAddresses * names * phoneNumbers"},{"1":"readMask","2":"String","3":1,"6":"Optional. A field mask to restrict which fields on the person are returned. Multiple fields can be specified by separating them with commas. Defaults to the copy mask with metadata and membership fields if not set. Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls * clientData * coverPhotos * emailAddresses * events * externalIds * genders * imClients * interests * locales * locations * memberships * metadata * miscKeywords * names * nicknames * occupations * organizations * phoneNumbers * photos * relations * sipAddresses * skills * urls * userDefined"},{"1":"sources","2":"String[]","3":1,"6":"Optional. A mask of what source types to return. Defaults to READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set."}],"6":"A request to copy an \"Other contact\" to my contacts group."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.CoverPhoto","2":[{"1":"default","2":"Boolean","3":1,"6":"True if the cover photo is the default cover photo; false if the cover photo is a user-provided cover photo."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the cover photo."},{"1":"url","2":"String","3":1,"6":"The URL of the cover photo."}],"6":"A person's cover photo. A large image shown on the person's profile page that represents who they are or what they care about."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.CreateContactGroupRequest","2":[{"1":"contactGroup","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":1,"6":"Required. The contact group to create."},{"1":"readGroupFields","2":"String","3":1,"6":"Optional. A field mask to restrict which fields on the group are returned. Defaults to `metadata`, `groupType`, and `name` if not set or set to empty. Valid fields are: * clientData * groupType * metadata * name"}],"6":"A request to create a new contact group."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Date","2":[{"1":"day","2":"Integer","3":1,"6":"Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant."},{"1":"month","2":"Integer","3":1,"6":"Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day."},{"1":"year","2":"Integer","3":1,"6":"Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year."}],"6":"Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.DeleteContactPhotoResponse","2":[{"1":"person","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":1,"6":"The updated person, if person_fields is set in the DeleteContactPhotoRequest; otherwise this will be unset."}],"6":"The response for deleteing a contact's photo."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.DomainMembership","2":[{"1":"inViewerDomain","2":"Boolean","3":1,"6":"True if the person is in the viewer's G Suite domain."}],"6":"A G Suite Domain membership."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.EmailAddress","2":[{"1":"displayName","2":"String","3":1,"6":"The display name of the email."},{"1":"formattedType","2":"String","3":1,"6":"Output only. The type of the email address translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the email address."},{"1":"type","2":"String","3":1,"6":"The type of the email address. The type can be custom or one of these predefined values: * `home` * `work` * `other`"},{"1":"value","2":"String","3":1,"6":"The email address."}],"6":"A person's email address."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Event","2":[{"1":"date","2":"Peopleapi_v1.Peopleapi.V1.Schema.Date","3":1,"6":"The date of the event."},{"1":"formattedType","2":"String","3":1,"6":"Output only. The type of the event translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the event."},{"1":"type","2":"String","3":1,"6":"The type of the event. The type can be custom or one of these predefined values: * `anniversary` * `other`"}],"6":"An event related to the person."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ExternalId","2":[{"1":"formattedType","2":"String","3":1,"6":"Output only. The type of the event translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the external ID."},{"1":"type","2":"String","3":1,"6":"The type of the external ID. The type can be custom or one of these predefined values: * `account` * `customer` * `loginId` * `network` * `organization`"},{"1":"value","2":"String","3":1,"6":"The value of the external ID."}],"6":"An identifier from an external entity related to the person."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","2":[{"1":"primary","2":"Boolean","3":1,"6":"True if the field is the primary field; false if the field is a secondary field."},{"1":"source","2":"Peopleapi_v1.Peopleapi.V1.Schema.Source","3":1,"6":"The source of the field."},{"1":"verified","2":"Boolean","3":1,"6":"Output only. True if the field is verified; false if the field is unverified. A verified field is typically a name, email address, phone number, or website that has been confirmed to be owned by the person."}],"6":"Metadata about a field."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.FileAs","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the file-as."},{"1":"value","2":"String","3":1,"6":"The file-as value"}],"6":"The name that should be used to sort the person in a list."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Gender","2":[{"1":"addressMeAs","2":"String","3":1,"6":"The type of pronouns that should be used to address the person. The value can be custom or one of these predefined values: * `male` * `female` * `other`"},{"1":"formattedValue","2":"String","3":1,"6":"Output only. The value of the gender translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale. Unspecified or custom value are not localized."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the gender."},{"1":"value","2":"String","3":1,"6":"The gender for the person. The gender can be custom or one of these predefined values: * `male` * `female` * `unspecified`"}],"6":"A person's gender."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.GetPeopleResponse","2":[{"1":"responses","2":"Peopleapi_v1.Peopleapi.V1.Schema.PersonResponse[]","3":1,"6":"The response for each requested resource name."}],"6":"The response to a get request for a list of people by resource name."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.GroupClientData","2":[{"1":"key","2":"String","3":1,"6":"The client specified key of the client data."},{"1":"value","2":"String","3":1,"6":"The client specified value of the client data."}],"6":"Arbitrary client data that is populated by clients. Duplicate keys and values are allowed. LINT.IfChange(GroupClientData)"},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ImClient","2":[{"1":"formattedProtocol","2":"String","3":1,"6":"Output only. The protocol of the IM client formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"formattedType","2":"String","3":1,"6":"Output only. The type of the IM client translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the IM client."},{"1":"protocol","2":"String","3":1,"6":"The protocol of the IM client. The protocol can be custom or one of these predefined values: * `aim` * `msn` * `yahoo` * `skype` * `qq` * `googleTalk` * `icq` * `jabber` * `netMeeting`"},{"1":"type","2":"String","3":1,"6":"The type of the IM client. The type can be custom or one of these predefined values: * `home` * `work` * `other`"},{"1":"username","2":"String","3":1,"6":"The user name used in the IM client."}],"6":"A person's instant messaging client."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Interest","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the interest."},{"1":"value","2":"String","3":1,"6":"The interest; for example, `stargazing`."}],"6":"One of the person's interests."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ListConnectionsResponse","2":[{"1":"connections","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person[]","3":1,"6":"The list of people that the requestor is connected to."},{"1":"nextPageToken","2":"String","3":1,"6":"A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."},{"1":"nextSyncToken","2":"String","3":1,"6":"A token, which can be sent as `sync_token` to retrieve changes since the last request. Request must set `request_sync_token` to return the sync token. When the response is paginated, only the last page will contain `nextSyncToken`."},{"1":"totalItems","2":"Integer","3":1,"6":"The total number of items in the list without pagination."},{"1":"totalPeople","2":"Integer","3":1,"6":"**DEPRECATED** (Please use totalItems) The total number of people in the list without pagination."}],"6":"The response to a request for the authenticated user's connections."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ListContactGroupsResponse","2":[{"1":"contactGroups","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup[]","3":1,"6":"The list of contact groups. Members of the contact groups are not populated."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used to retrieve the next page of results."},{"1":"nextSyncToken","2":"String","3":1,"6":"The token that can be used to retrieve changes since the last request."},{"1":"totalItems","2":"Integer","3":1,"6":"The total number of items in the list without pagination."}],"6":"The response to a list contact groups request."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ListDirectoryPeopleResponse","2":[{"1":"nextPageToken","2":"String","3":1,"6":"A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."},{"1":"nextSyncToken","2":"String","3":1,"6":"A token, which can be sent as `sync_token` to retrieve changes since the last request. Request must set `request_sync_token` to return the sync token."},{"1":"people","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person[]","3":1,"6":"The list of people in the domain directory."}],"6":"The response to a request for the authenticated user's domain directory."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ListOtherContactsResponse","2":[{"1":"nextPageToken","2":"String","3":1,"6":"A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."},{"1":"nextSyncToken","2":"String","3":1,"6":"A token, which can be sent as `sync_token` to retrieve changes since the last request. Request must set `request_sync_token` to return the sync token."},{"1":"otherContacts","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person[]","3":1,"6":"The list of \"Other contacts\" returned as Person resources. \"Other contacts\" support a limited subset of fields. See ListOtherContactsRequest.request_mask for more detailed information."}],"6":"The response to a request for the authenticated user's \"Other contacts\"."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Locale","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the locale."},{"1":"value","2":"String","3":1,"6":"The well-formed [IETF BCP 47](https://tools.ietf.org/html/bcp47) language tag representing the locale."}],"6":"A person's locale preference."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Location","2":[{"1":"buildingId","2":"String","3":1,"6":"The building identifier."},{"1":"current","2":"Boolean","3":1,"6":"Whether the location is the current location."},{"1":"deskCode","2":"String","3":1,"6":"The individual desk location."},{"1":"floor","2":"String","3":1,"6":"The floor name or number."},{"1":"floorSection","2":"String","3":1,"6":"The floor section in `floor_name`."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the location."},{"1":"type","2":"String","3":1,"6":"The type of the location. The type can be custom or one of these predefined values: * `desk` * `grewUp`"},{"1":"value","2":"String","3":1,"6":"The free-form value of the location."}],"6":"A person's location."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Membership","2":[{"1":"contactGroupMembership","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroupMembership","3":1,"6":"The contact group membership."},{"1":"domainMembership","2":"Peopleapi_v1.Peopleapi.V1.Schema.DomainMembership","3":1,"6":"Output only. The domain membership."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the membership."}],"6":"A person's membership in a group. Only contact group memberships can be modified."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.MiscKeyword","2":[{"1":"formattedType","2":"String","3":1,"6":"Output only. The type of the miscellaneous keyword translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the miscellaneous keyword."},{"1":"type","2":"String","3":1,"6":"The miscellaneous keyword type."},{"1":"value","2":"String","3":1,"6":"The value of the miscellaneous keyword."}],"6":"A person's miscellaneous keyword."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ModifyContactGroupMembersRequest","2":[{"1":"resourceNamesToAdd","2":"String[]","3":1,"6":"Optional. The resource names of the contact people to add in the form of `people/{person_id}`. The total number of resource names in `resource_names_to_add` and `resource_names_to_remove` must be less than or equal to 1000."},{"1":"resourceNamesToRemove","2":"String[]","3":1,"6":"Optional. The resource names of the contact people to remove in the form of `people/{person_id}`. The total number of resource names in `resource_names_to_add` and `resource_names_to_remove` must be less than or equal to 1000."}],"6":"A request to modify an existing contact group's members. Contacts can be removed from any group but they can only be added to a user group or \"myContacts\" or \"starred\" system groups."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ModifyContactGroupMembersResponse","2":[{"1":"canNotRemoveLastContactGroupResourceNames","2":"String[]","3":1,"6":"The contact people resource names that cannot be removed from their last contact group."},{"1":"notFoundResourceNames","2":"String[]","3":1,"6":"The contact people resource names that were not found."}],"6":"The response to a modify contact group members request."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Name","2":[{"1":"displayName","2":"String","3":1,"6":"Output only. The display name formatted according to the locale specified by the viewer's account or the `Accept-Language` HTTP header."},{"1":"displayNameLastFirst","2":"String","3":1,"6":"Output only. The display name with the last name first formatted according to the locale specified by the viewer's account or the `Accept-Language` HTTP header."},{"1":"familyName","2":"String","3":1,"6":"The family name."},{"1":"givenName","2":"String","3":1,"6":"The given name."},{"1":"honorificPrefix","2":"String","3":1,"6":"The honorific prefixes, such as `Mrs.` or `Dr.`"},{"1":"honorificSuffix","2":"String","3":1,"6":"The honorific suffixes, such as `Jr.`"},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the name."},{"1":"middleName","2":"String","3":1,"6":"The middle name(s)."},{"1":"phoneticFamilyName","2":"String","3":1,"6":"The family name spelled as it sounds."},{"1":"phoneticFullName","2":"String","3":1,"6":"The full name spelled as it sounds."},{"1":"phoneticGivenName","2":"String","3":1,"6":"The given name spelled as it sounds."},{"1":"phoneticHonorificPrefix","2":"String","3":1,"6":"The honorific prefixes spelled as they sound."},{"1":"phoneticHonorificSuffix","2":"String","3":1,"6":"The honorific suffixes spelled as they sound."},{"1":"phoneticMiddleName","2":"String","3":1,"6":"The middle name(s) spelled as they sound."},{"1":"unstructuredName","2":"String","3":1,"6":"The free form name value."}],"6":"A person's name. If the name is a mononym, the family name is empty."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Nickname","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the nickname."},{"1":"type","2":"String","3":1,"6":"The type of the nickname."},{"1":"value","2":"String","3":1,"6":"The nickname."}],"6":"A person's nickname."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Occupation","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the occupation."},{"1":"value","2":"String","3":1,"6":"The occupation; for example, `carpenter`."}],"6":"A person's occupation."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Organization","2":[{"1":"current","2":"Boolean","3":1,"6":"True if the organization is the person's current organization; false if the organization is a past organization."},{"1":"department","2":"String","3":1,"6":"The person's department at the organization."},{"1":"domain","2":"String","3":1,"6":"The domain name associated with the organization; for example, `google.com`."},{"1":"endDate","2":"Peopleapi_v1.Peopleapi.V1.Schema.Date","3":1,"6":"The end date when the person left the organization."},{"1":"formattedType","2":"String","3":1,"6":"Output only. The type of the organization translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"jobDescription","2":"String","3":1,"6":"The person's job description at the organization."},{"1":"location","2":"String","3":1,"6":"The location of the organization office the person works at."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the organization."},{"1":"name","2":"String","3":1,"6":"The name of the organization."},{"1":"phoneticName","2":"String","3":1,"6":"The phonetic name of the organization."},{"1":"startDate","2":"Peopleapi_v1.Peopleapi.V1.Schema.Date","3":1,"6":"The start date when the person joined the organization."},{"1":"symbol","2":"String","3":1,"6":"The symbol associated with the organization; for example, a stock ticker symbol, abbreviation, or acronym."},{"1":"title","2":"String","3":1,"6":"The person's job title at the organization."},{"1":"type","2":"String","3":1,"6":"The type of the organization. The type can be custom or one of these predefined values: * `work` * `school`"}],"6":"A person's past or current organization. Overlapping date ranges are permitted."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Person","2":[{"1":"addresses","2":"Peopleapi_v1.Peopleapi.V1.Schema.Address[]","3":1,"6":"The person's street addresses."},{"1":"ageRange","2":"String","3":1,"6":"Output only. **DEPRECATED** (Please use `person.ageRanges` instead) The person's age range."},{"1":"ageRanges","2":"Peopleapi_v1.Peopleapi.V1.Schema.AgeRangeType[]","3":1,"6":"Output only. The person's age ranges."},{"1":"biographies","2":"Peopleapi_v1.Peopleapi.V1.Schema.Biography[]","3":1,"6":"The person's biographies. This field is a singleton for contact sources."},{"1":"birthdays","2":"Peopleapi_v1.Peopleapi.V1.Schema.Birthday[]","3":1,"6":"The person's birthdays. This field is a singleton for contact sources."},{"1":"braggingRights","2":"Peopleapi_v1.Peopleapi.V1.Schema.BraggingRights[]","3":1,"6":"**DEPRECATED**: No data will be returned The person's bragging rights."},{"1":"calendarUrls","2":"Peopleapi_v1.Peopleapi.V1.Schema.CalendarUrl[]","3":1,"6":"The person's calendar URLs."},{"1":"clientData","2":"Peopleapi_v1.Peopleapi.V1.Schema.ClientData[]","3":1,"6":"The person's client data."},{"1":"coverPhotos","2":"Peopleapi_v1.Peopleapi.V1.Schema.CoverPhoto[]","3":1,"6":"Output only. The person's cover photos."},{"1":"emailAddresses","2":"Peopleapi_v1.Peopleapi.V1.Schema.EmailAddress[]","3":1,"6":"The person's email addresses."},{"1":"etag","2":"String","3":1,"6":"The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the resource. Used for web cache validation."},{"1":"events","2":"Peopleapi_v1.Peopleapi.V1.Schema.Event[]","3":1,"6":"The person's events."},{"1":"externalIds","2":"Peopleapi_v1.Peopleapi.V1.Schema.ExternalId[]","3":1,"6":"The person's external IDs."},{"1":"fileAses","2":"Peopleapi_v1.Peopleapi.V1.Schema.FileAs[]","3":1,"6":"The person's file-ases."},{"1":"genders","2":"Peopleapi_v1.Peopleapi.V1.Schema.Gender[]","3":1,"6":"The person's genders. This field is a singleton for contact sources."},{"1":"imClients","2":"Peopleapi_v1.Peopleapi.V1.Schema.ImClient[]","3":1,"6":"The person's instant messaging clients."},{"1":"interests","2":"Peopleapi_v1.Peopleapi.V1.Schema.Interest[]","3":1,"6":"The person's interests."},{"1":"locales","2":"Peopleapi_v1.Peopleapi.V1.Schema.Locale[]","3":1,"6":"The person's locale preferences."},{"1":"locations","2":"Peopleapi_v1.Peopleapi.V1.Schema.Location[]","3":1,"6":"The person's locations."},{"1":"memberships","2":"Peopleapi_v1.Peopleapi.V1.Schema.Membership[]","3":1,"6":"The person's group memberships."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.PersonMetadata","3":1,"6":"Output only. Metadata about the person."},{"1":"miscKeywords","2":"Peopleapi_v1.Peopleapi.V1.Schema.MiscKeyword[]","3":1,"6":"The person's miscellaneous keywords."},{"1":"names","2":"Peopleapi_v1.Peopleapi.V1.Schema.Name[]","3":1,"6":"The person's names. This field is a singleton for contact sources."},{"1":"nicknames","2":"Peopleapi_v1.Peopleapi.V1.Schema.Nickname[]","3":1,"6":"The person's nicknames."},{"1":"occupations","2":"Peopleapi_v1.Peopleapi.V1.Schema.Occupation[]","3":1,"6":"The person's occupations."},{"1":"organizations","2":"Peopleapi_v1.Peopleapi.V1.Schema.Organization[]","3":1,"6":"The person's past or current organizations."},{"1":"phoneNumbers","2":"Peopleapi_v1.Peopleapi.V1.Schema.PhoneNumber[]","3":1,"6":"The person's phone numbers."},{"1":"photos","2":"Peopleapi_v1.Peopleapi.V1.Schema.Photo[]","3":1,"6":"Output only. The person's photos."},{"1":"relations","2":"Peopleapi_v1.Peopleapi.V1.Schema.Relation[]","3":1,"6":"The person's relations."},{"1":"relationshipInterests","2":"Peopleapi_v1.Peopleapi.V1.Schema.RelationshipInterest[]","3":1,"6":"Output only. **DEPRECATED**: No data will be returned The person's relationship interests."},{"1":"relationshipStatuses","2":"Peopleapi_v1.Peopleapi.V1.Schema.RelationshipStatus[]","3":1,"6":"Output only. **DEPRECATED**: No data will be returned The person's relationship statuses."},{"1":"residences","2":"Peopleapi_v1.Peopleapi.V1.Schema.Residence[]","3":1,"6":"**DEPRECATED**: (Please use `person.locations` instead) The person's residences."},{"1":"resourceName","2":"String","3":1,"6":"The resource name for the person, assigned by the server. An ASCII string with a max length of 27 characters, in the form of `people/{person_id}`."},{"1":"sipAddresses","2":"Peopleapi_v1.Peopleapi.V1.Schema.SipAddress[]","3":1,"6":"The person's SIP addresses."},{"1":"skills","2":"Peopleapi_v1.Peopleapi.V1.Schema.Skill[]","3":1,"6":"The person's skills."},{"1":"taglines","2":"Peopleapi_v1.Peopleapi.V1.Schema.Tagline[]","3":1,"6":"Output only. **DEPRECATED**: No data will be returned The person's taglines."},{"1":"urls","2":"Peopleapi_v1.Peopleapi.V1.Schema.Url[]","3":1,"6":"The person's associated URLs."},{"1":"userDefined","2":"Peopleapi_v1.Peopleapi.V1.Schema.UserDefined[]","3":1,"6":"The person's user defined data."}],"6":"Information about a person merged from various data sources such as the authenticated user's contacts and profile data. Most fields can have multiple items. The items in a field have no guaranteed order, but each non-empty field is guaranteed to have exactly one field with `metadata.primary` set to true."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.PersonMetadata","2":[{"1":"deleted","2":"Boolean","3":1,"6":"Output only. True if the person resource has been deleted. Populated only for [`connections.list`](/people/api/rest/v1/people.connections/list) requests that include a sync token."},{"1":"linkedPeopleResourceNames","2":"String[]","3":1,"6":"Output only. Resource names of people linked to this resource."},{"1":"objectType","2":"String","3":1,"6":"Output only. **DEPRECATED** (Please use `person.metadata.sources.profileMetadata.objectType` instead) The type of the person object."},{"1":"previousResourceNames","2":"String[]","3":1,"6":"Output only. Any former resource names this person has had. Populated only for [`connections.list`](/people/api/rest/v1/people.connections/list) requests that include a sync token. The resource name may change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or profile URL."},{"1":"sources","2":"Peopleapi_v1.Peopleapi.V1.Schema.Source[]","3":1,"6":"The sources of data for the person."}],"6":"The metadata about a person."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.PersonResponse","2":[{"1":"httpStatusCode","2":"Integer","3":1,"6":"**DEPRECATED** (Please use status instead) [HTTP 1.1 status code] (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html)."},{"1":"person","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":1,"6":"The person."},{"1":"requestedResourceName","2":"String","3":1,"6":"The original requested resource name. May be different than the resource name on the returned person. The resource name can change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or a profile URL."},{"1":"status","2":"Peopleapi_v1.Peopleapi.V1.Schema.Status","3":1,"6":"The status of the response."}],"6":"The response for a single person"},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.PhoneNumber","2":[{"1":"canonicalForm","2":"String","3":1,"6":"Output only. The canonicalized [ITU-T E.164](https://law.resource.org/pub/us/cfr/ibr/004/itu-t.E.164.1.2008.pdf) form of the phone number."},{"1":"formattedType","2":"String","3":1,"6":"Output only. The type of the phone number translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the phone number."},{"1":"type","2":"String","3":1,"6":"The type of the phone number. The type can be custom or one of these predefined values: * `home` * `work` * `mobile` * `homeFax` * `workFax` * `otherFax` * `pager` * `workMobile` * `workPager` * `main` * `googleVoice` * `other`"},{"1":"value","2":"String","3":1,"6":"The phone number."}],"6":"A person's phone number."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Photo","2":[{"1":"default","2":"Boolean","3":1,"6":"True if the photo is a default photo; false if the photo is a user-provided photo."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the photo."},{"1":"url","2":"String","3":1,"6":"The URL of the photo. You can change the desired size by appending a query parameter `sz\u003d{size}` at the end of the url, where {size} is the size in pixels. Example: https://lh3.googleusercontent.com/-T_wVWLlmg7w/AAAAAAAAAAI/AAAAAAAABa8/00gzXvDBYqw/s100/photo.jpg?sz\u003d50"}],"6":"A person's photo. A picture shown next to the person's name to help others recognize the person."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.ProfileMetadata","2":[{"1":"objectType","2":"String","3":1,"6":"Output only. The profile object type."},{"1":"userTypes","2":"String[]","3":1,"6":"Output only. The user types."}],"6":"The metadata about a profile."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Relation","2":[{"1":"formattedType","2":"String","3":1,"6":"Output only. The type of the relation translated and formatted in the viewer's account locale or the locale specified in the Accept-Language HTTP header."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the relation."},{"1":"person","2":"String","3":1,"6":"The name of the other person this relation refers to."},{"1":"type","2":"String","3":1,"6":"The person's relation to the other person. The type can be custom or one of these predefined values: * `spouse` * `child` * `mother` * `father` * `parent` * `brother` * `sister` * `friend` * `relative` * `domesticPartner` * `manager` * `assistant` * `referredBy` * `partner`"}],"6":"A person's relation to another person."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.RelationshipInterest","2":[{"1":"formattedValue","2":"String","3":1,"6":"Output only. The value of the relationship interest translated and formatted in the viewer's account locale or the locale specified in the Accept-Language HTTP header."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the relationship interest."},{"1":"value","2":"String","3":1,"6":"The kind of relationship the person is looking for. The value can be custom or one of these predefined values: * `friend` * `date` * `relationship` * `networking`"}],"6":"**DEPRECATED**: No data will be returned A person's relationship interest ."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.RelationshipStatus","2":[{"1":"formattedValue","2":"String","3":1,"6":"Output only. The value of the relationship status translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the relationship status."},{"1":"value","2":"String","3":1,"6":"The relationship status. The value can be custom or one of these predefined values: * `single` * `inARelationship` * `engaged` * `married` * `itsComplicated` * `openRelationship` * `widowed` * `inDomesticPartnership` * `inCivilUnion`"}],"6":"**DEPRECATED**: No data will be returned A person's relationship status."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Residence","2":[{"1":"current","2":"Boolean","3":1,"6":"True if the residence is the person's current residence; false if the residence is a past residence."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the residence."},{"1":"value","2":"String","3":1,"6":"The address of the residence."}],"6":"**DEPRECATED**: Please use `person.locations` instead. A person's past or current residence."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.SearchDirectoryPeopleResponse","2":[{"1":"nextPageToken","2":"String","3":1,"6":"A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."},{"1":"people","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person[]","3":1,"6":"The list of people in the domain directory that match the query."},{"1":"totalSize","2":"Integer","3":1,"6":"The total number of items in the list without pagination."}],"6":"The response to a request for people in the authenticated user's domain directory that match the specified query."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.SipAddress","2":[{"1":"formattedType","2":"String","3":1,"6":"Output only. The type of the SIP address translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the SIP address."},{"1":"type","2":"String","3":1,"6":"The type of the SIP address. The type can be custom or or one of these predefined values: * `home` * `work` * `mobile` * `other`"},{"1":"value","2":"String","3":1,"6":"The SIP address in the [RFC 3261 19.1](https://tools.ietf.org/html/rfc3261#section-19.1) SIP URI format."}],"6":"A person's SIP address. Session Initial Protocol addresses are used for VoIP communications to make voice or video calls over the internet."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Skill","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the skill."},{"1":"value","2":"String","3":1,"6":"The skill; for example, `underwater basket weaving`."}],"6":"A skill that the person has."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Source","2":[{"1":"etag","2":"String","3":1,"6":"**Only populated in `person.metadata.sources`.** The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the source. Used for web cache validation."},{"1":"id","2":"String","3":1,"6":"The unique identifier within the source type generated by the server."},{"1":"profileMetadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.ProfileMetadata","3":1,"6":"Output only. **Only populated in `person.metadata.sources`.** Metadata about a source of type PROFILE."},{"1":"type","2":"String","3":1,"6":"The source type."},{"1":"updateTime","2":"String","3":1,"6":"Output only. **Only populated in `person.metadata.sources`.** Last update timestamp of this source."}],"6":"The source of a field."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Status","2":[{"1":"code","2":"Integer","3":1,"6":"The status code, which should be an enum value of google.rpc.Code."},{"1":"details","2":"Object[]","3":1,"6":"A list of messages that carry the error details. There is a common set of message types for APIs to use."},{"1":"message","2":"String","3":1,"6":"A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."}],"6":"The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Tagline","2":[{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the tagline."},{"1":"value","2":"String","3":1,"6":"The tagline."}],"6":"**DEPRECATED**: No data will be returned A brief one-line description of the person."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.UpdateContactGroupRequest","2":[{"1":"contactGroup","2":"Peopleapi_v1.Peopleapi.V1.Schema.ContactGroup","3":1,"6":"Required. The contact group to update."},{"1":"readGroupFields","2":"String","3":1,"6":"Optional. A field mask to restrict which fields on the group are returned. Defaults to `metadata`, `groupType`, and `name` if not set or set to empty. Valid fields are: * clientData * groupType * memberCount * metadata * name"},{"1":"updateGroupFields","2":"String","3":1,"6":"Optional. A field mask to restrict which fields on the group are updated. Multiple fields can be specified by separating them with commas. Defaults to `name` if not set or set to empty. Updated fields are replaced. Valid values are: * clientData * name"}],"6":"A request to update an existing user contact group. All updated fields will be replaced."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.UpdateContactPhotoRequest","2":[{"1":"personFields","2":"String","3":1,"6":"Optional. A field mask to restrict which fields on the person are returned. Multiple fields can be specified by separating them with commas. Defaults to empty if not set, which will skip the post mutate get. Valid values are: * addresses * ageRanges * biographies * birthdays * calendarUrls * clientData * coverPhotos * emailAddresses * events * externalIds * genders * imClients * interests * locales * locations * memberships * metadata * miscKeywords * names * nicknames * occupations * organizations * phoneNumbers * photos * relations * sipAddresses * skills * urls * userDefined"},{"1":"photoBytes","2":"Byte[]","3":1,"6":"Required. Raw photo bytes"},{"1":"sources","2":"String[]","3":1,"6":"Optional. A mask of what source types to return. Defaults to READ_SOURCE_TYPE_CONTACT and READ_SOURCE_TYPE_PROFILE if not set."}],"6":"A request to update an existing contact's photo. All requests must have a valid photo format: JPEG or PNG."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.UpdateContactPhotoResponse","2":[{"1":"person","2":"Peopleapi_v1.Peopleapi.V1.Schema.Person","3":1,"6":"The updated person, if person_fields is set in the UpdateContactPhotoRequest; otherwise this will be unset."}],"6":"The response for updating a contact's photo."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.Url","2":[{"1":"formattedType","2":"String","3":1,"6":"Output only. The type of the URL translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the URL."},{"1":"type","2":"String","3":1,"6":"The type of the URL. The type can be custom or one of these predefined values: * `home` * `work` * `blog` * `profile` * `homePage` * `ftp` * `reservations` * `appInstallPage`: website for a Currents application. * `other`"},{"1":"value","2":"String","3":1,"6":"The URL."}],"6":"A person's associated URLs."},{"1":"Peopleapi_v1.Peopleapi.V1.Schema.UserDefined","2":[{"1":"key","2":"String","3":1,"6":"The end user specified key of the user defined data."},{"1":"metadata","2":"Peopleapi_v1.Peopleapi.V1.Schema.FieldMetadata","3":1,"6":"Metadata about the user defined data."},{"1":"value","2":"String","3":1,"6":"The end user specified value of the user defined data."}],"6":"Arbitrary user data that is populated by the end users."}],"3":0,"4":0,"5":0}