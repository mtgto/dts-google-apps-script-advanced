)]}'
{"1":{"1":"YoutubeAnalytics_v2","2":[{"1":"GroupItems","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Collection.GroupItemsCollection","3":1},{"1":"Groups","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Collection.GroupsCollection","3":1},{"1":"Reports","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Collection.ReportsCollection","3":1}],"3":[{"1":"newErrorProto","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.ErrorProto","6":"Create a new instance of ErrorProto"},{"1":"newErrors","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Errors","6":"Create a new instance of Errors"},{"1":"newGroup","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Group","6":"Create a new instance of Group"},{"1":"newGroupContentDetails","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupContentDetails","6":"Create a new instance of GroupContentDetails"},{"1":"newGroupItem","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupItem","6":"Create a new instance of GroupItem"},{"1":"newGroupItemResource","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupItemResource","6":"Create a new instance of GroupItemResource"},{"1":"newGroupSnippet","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupSnippet","6":"Create a new instance of GroupSnippet"}],"6":"Retrieves your YouTube Analytics data."},"2":[{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Collection.GroupItemsCollection","3":[{"1":"insert","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupItem","3":[{"1":"resource","2":"YoutubeAnalytics.V2.Schema.GroupItem"}],"6":"Creates a group item."},{"1":"insert","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupItem","3":[{"1":"resource","2":"YoutubeAnalytics.V2.Schema.GroupItem"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Creates a group item."},{"1":"list","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.ListGroupItemsResponse","6":"Returns a collection of group items that match the API request parameters."},{"1":"list","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.ListGroupItemsResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Returns a collection of group items that match the API request parameters."},{"1":"remove","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.EmptyResponse","6":"Removes an item from a group."},{"1":"remove","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.EmptyResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Removes an item from a group."}]},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Collection.GroupsCollection","3":[{"1":"insert","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Group","3":[{"1":"resource","2":"YoutubeAnalytics.V2.Schema.Group"}],"6":"Creates a group."},{"1":"insert","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Group","3":[{"1":"resource","2":"YoutubeAnalytics.V2.Schema.Group"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Creates a group."},{"1":"list","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.ListGroupsResponse","6":"Returns a collection of groups that match the API request parameters. For example, you can retrieve all groups that the authenticated user owns, or you can retrieve one or more groups by their unique IDs."},{"1":"list","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.ListGroupsResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Returns a collection of groups that match the API request parameters. For example, you can retrieve all groups that the authenticated user owns, or you can retrieve one or more groups by their unique IDs."},{"1":"remove","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.EmptyResponse","6":"Deletes a group."},{"1":"remove","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.EmptyResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Deletes a group."},{"1":"update","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Group","3":[{"1":"resource","2":"YoutubeAnalytics.V2.Schema.Group"}],"6":"Modifies a group. For example, you could change a group's title."},{"1":"update","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Group","3":[{"1":"resource","2":"YoutubeAnalytics.V2.Schema.Group"},{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Modifies a group. For example, you could change a group's title."}]},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Collection.ReportsCollection","3":[{"1":"query","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.QueryResponse","6":"Retrieve your YouTube Analytics reports."},{"1":"query","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.QueryResponse","3":[{"1":"optionalArgs","2":"Object","3":"Optional arguments."}],"6":"Retrieve your YouTube Analytics reports."}]},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.EmptyResponse","2":[{"1":"errors","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Errors","3":1,"6":"Apiary error details"}],"6":"Empty response."},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.ErrorProto","2":[{"1":"argument","2":"String[]","3":1,"6":"Error arguments, to be used when building user-friendly error messages given the error domain and code. Different error codes require different arguments."},{"1":"code","2":"String","3":1,"6":"Error code in the error domain. This should correspond to a value of the enum type whose name is in domain. See the core error domain in error_domain.proto."},{"1":"debugInfo","2":"String","3":1,"6":"Debugging information, which should not be shared externally."},{"1":"domain","2":"String","3":1,"6":"Error domain. RoSy services can define their own domain and error codes. This should normally be the name of an enum type, such as: gdata.CoreErrorDomain"},{"1":"externalErrorMessage","2":"String","3":1,"6":"A short explanation for the error, which can be shared outside Google. Please set domain, code and arguments whenever possible instead of this error message so that external APIs can build safe error messages themselves. External messages built in a RoSy interface will most likely refer to information and concepts that are not available externally and should not be exposed. It is safer if external APIs can understand the errors and decide what the error message should look like."},{"1":"location","2":"String","3":1,"6":"Location of the error, as specified by the location type. If location_type is PATH, this should be a path to a field that's relative to the request, using FieldPath notation (net/proto2/util/public/field_path.h). Examples: authenticated_user.gaia_id resource.address[2].country"},{"1":"locationType","2":"String","3":1}],"6":"Describes one specific error."},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Errors","2":[{"1":"code","2":"String","3":1,"6":"Global error code. Deprecated and ignored. Set custom error codes in ErrorProto.domain and ErrorProto.code instead."},{"1":"error","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.ErrorProto[]","3":1,"6":"Specific error description and codes"},{"1":"requestId","2":"String","3":1,"6":"Request identifier generated by the service, which can be used to identify the error in the logs"}],"6":"Request Error information. The presence of an error field signals that the operation has failed."},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Group","2":[{"1":"contentDetails","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupContentDetails","3":1,"6":"The `contentDetails` object contains additional information about the group, such as the number and type of items that it contains."},{"1":"errors","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Errors","3":1,"6":"Apiary error details"},{"1":"etag","2":"String","3":1,"6":"The Etag of this resource."},{"1":"id","2":"String","3":1,"6":"The ID that YouTube uses to uniquely identify the group."},{"1":"kind","2":"String","3":1,"6":"Identifies the API resource's type. The value will be `youtube#group`."},{"1":"snippet","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupSnippet","3":1,"6":"The `snippet` object contains basic information about the group, including its creation date and name."}],"6":"A group."},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupContentDetails","2":[{"1":"itemCount","2":"String","3":1,"6":"The number of items in the group."},{"1":"itemType","2":"String","3":1,"6":"The type of resources that the group contains. Valid values for this property are: * `youtube#channel` * `youtube#playlist` * `youtube#video` * `youtubePartner#asset`"}],"6":"A group's content details."},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupItem","2":[{"1":"errors","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Errors","3":1,"6":"Apiary error details"},{"1":"etag","2":"String","3":1,"6":"The Etag of this resource."},{"1":"groupId","2":"String","3":1,"6":"The ID that YouTube uses to uniquely identify the group that contains the item."},{"1":"id","2":"String","3":1,"6":"The ID that YouTube uses to uniquely identify the `channel`, `video`, `playlist`, or `asset` resource that is included in the group. Note that this ID refers specifically to the inclusion of that resource in a particular group and is different than the channel ID, video ID, playlist ID, or asset ID that uniquely identifies the resource itself. The `resource.id` property's value specifies the unique channel, video, playlist, or asset ID."},{"1":"kind","2":"String","3":1,"6":"Identifies the API resource's type. The value will be `youtube#groupItem`."},{"1":"resource","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupItemResource","3":1,"6":"The `resource` object contains information that identifies the item being added to the group."}],"6":"A group item."},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupItemResource","2":[{"1":"id","2":"String","3":1,"6":"The channel, video, playlist, or asset ID that YouTube uses to uniquely identify the item that is being added to the group."},{"1":"kind","2":"String","3":1,"6":"Identifies the type of resource being added to the group. Valid values for this property are: * `youtube#channel` * `youtube#playlist` * `youtube#video` * `youtubePartner#asset`"}]},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupSnippet","2":[{"1":"publishedAt","2":"String","3":1,"6":"The date and time that the group was created. The value is specified in ISO 8601 (YYYY-MM-DDThh:mm:ss.sZ) format."},{"1":"title","2":"String","3":1,"6":"The group name. The value must be a non-empty string."}],"6":"A group snippet."},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.ListGroupItemsResponse","2":[{"1":"errors","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Errors","3":1,"6":"Apiary error details"},{"1":"etag","2":"String","3":1,"6":"The Etag of this resource."},{"1":"items","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.GroupItem[]","3":1,"6":"A list of groups that match the API request parameters. Each item in the list represents a `groupItem` resource."},{"1":"kind","2":"String","3":1,"6":"Identifies the API resource's type. The value will be `youtube#groupItemListResponse`."}],"6":"Response message for GroupsService.ListGroupItems."},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.ListGroupsResponse","2":[{"1":"errors","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Errors","3":1,"6":"Apiary error details"},{"1":"etag","2":"String","3":1,"6":"The Etag of this resource."},{"1":"items","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Group[]","3":1,"6":"A list of groups that match the API request parameters. Each item in the list represents a `group` resource."},{"1":"kind","2":"String","3":1,"6":"Identifies the API resource's type. The value will be `youtube#groupListResponse`."},{"1":"nextPageToken","2":"String","3":1,"6":"The token that can be used as the value of the `pageToken` parameter to retrieve the next page in the result set."}],"6":"Response message for GroupsService.ListGroups."},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.QueryResponse","2":[{"1":"columnHeaders","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.ResultTableColumnHeader[]","3":1,"6":"This value specifies information about the data returned in the `rows` fields. Each item in the `columnHeaders` list identifies a field returned in the `rows` value, which contains a list of comma-delimited data. The `columnHeaders` list will begin with the dimensions specified in the API request, which will be followed by the metrics specified in the API request. The order of both dimensions and metrics will match the ordering in the API request. For example, if the API request contains the parameters `dimensions\u003dageGroup,gender\u0026metrics\u003dviewerPercentage`, the API response will return columns in this order: `ageGroup`, `gender`, `viewerPercentage`."},{"1":"errors","2":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.Errors","3":1,"6":"When set, indicates that the operation failed."},{"1":"kind","2":"String","3":1,"6":"This value specifies the type of data included in the API response. For the query method, the kind property value will be `youtubeAnalytics#resultTable`."},{"1":"rows","2":"Object[][]","3":1,"6":"The list contains all rows of the result table. Each item in the list is an array that contains comma-delimited data corresponding to a single row of data. The order of the comma-delimited data fields will match the order of the columns listed in the `columnHeaders` field. If no data is available for the given query, the `rows` element will be omitted from the response. The response for a query with the `day` dimension will not contain rows for the most recent days."}],"6":"Response message for TargetedQueriesService.Query."},{"1":"YoutubeAnalytics_v2.YoutubeAnalytics.V2.Schema.ResultTableColumnHeader","2":[{"1":"columnType","2":"String","3":1,"6":"The type of the column (`DIMENSION` or `METRIC`)."},{"1":"dataType","2":"String","3":1,"6":"The type of the data in the column (`STRING`, `INTEGER`, `FLOAT`, etc.)."},{"1":"name","2":"String","3":1,"6":"The name of the dimension or metric."}],"6":"The description of a column of the result table."}],"3":0,"4":0,"5":0}